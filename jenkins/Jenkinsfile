pipeline {
    agent {
        label 'server1'
    }
tools {
  maven 'mymaven'
}
    stages {
        stage('Build stage') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Sonar analysis') {
             steps {
             withSonarQubeEnv('sonarqubev25.3.0.104237'){
           
                sh 'mvn sonar:sonar -Dsonar.projectKey=sonarqube-token'
            }
             }
        }
    }
}


/*
pipeline{
 agent any

   stages{
   stage('build'){

        steps{
       echo "We are in build stage"   
             }
      
                 }
      stage('Test'){
         steps{
            echo "We are in Testing stage"
         }
      }

      stage('Deploy'){
         steps{
            echo "We are in Deploy stage"
             sh 'pwd;whoami'
            
             sh 'chmod +x ./jenkins/scripts/successmsg.sh '
         }
      }

      stage('Script Run'){
         steps{
            sh './jenkins/scripts/successmsg.sh'
         }
      }

      
   }

   
}

*/

/* pipeline{
   agent {
  label 'devServer'
}

parameters {
  string defaultValue: 'smith', name: 'LASTNAME'
}

environment{
    NAME = "John Doe"
}

tools {

    maven 'mymaven'
}

        stages{

            stage('build'){

                steps{
                    
                    sh 'mvn clean package'
                    echo "hello $NAME ${params.LASTNAME}"
                }
                
            }

stage('test'){

    parallel{
        stage('testA'){
            steps{
                echo "This is test A"
            }
           
        }
        stage('testB')
        {
            steps{
               echo "This is test B"
            }
            
        }
    }
    */
   // post {
   //   success {
   //    archiveArtifacts artifacts: '**/target/*.jar'
   //      }
   //        }
//}
           
//        }
    
//}


/* pipeline {
    agent {
        docker {
            image 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
} */
